<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="icosphere_8h" kind="file" language="C++">
    <compoundname>icosphere.h</compoundname>
    <includes local="no">vector</includes>
    <includes local="no">list</includes>
    <includes local="no">map</includes>
    <includes local="no">math.h</includes>
    <includes local="no">QOpenGLFunctions</includes>
    <includes local="no">QVector3D</includes>
    <includes local="no">../external-libraries/glm-master/glm/mat3x3.hpp</includes>
    <includes local="no">../external-libraries/glm-master/glm/matrix.hpp</includes>
    <includes local="no">../external-libraries/glm-master/glm/vec3.hpp</includes>
    <includes refid="spheredepthdata_8h" local="yes">spheredepthdata.h</includes>
    <includes local="no">iostream</includes>
    <includedby refid="icosphere_8cpp" local="yes">icosphere.cpp</includedby>
    <includedby refid="renderdata_8h" local="yes">renderdata.h</includedby>
    <includedby refid="spherewidget_8h" local="yes">spherewidget.h</includedby>
    <incdepgraph>
      <node id="147">
        <label>list</label>
      </node>
      <node id="152">
        <label>../external-libraries/glm-master/glm/mat3x3.hpp</label>
      </node>
      <node id="153">
        <label>../external-libraries/glm-master/glm/matrix.hpp</label>
      </node>
      <node id="151">
        <label>QVector3D</label>
      </node>
      <node id="155">
        <label>spheredepthdata.h</label>
        <link refid="spheredepthdata_8h"/>
        <childnode refid="146" relation="include">
        </childnode>
        <childnode refid="156" relation="include">
        </childnode>
        <childnode refid="151" relation="include">
        </childnode>
        <childnode refid="157" relation="include">
        </childnode>
      </node>
      <node id="148">
        <label>map</label>
      </node>
      <node id="145">
        <label>icosphere.h</label>
        <link refid="icosphere_8h"/>
        <childnode refid="146" relation="include">
        </childnode>
        <childnode refid="147" relation="include">
        </childnode>
        <childnode refid="148" relation="include">
        </childnode>
        <childnode refid="149" relation="include">
        </childnode>
        <childnode refid="150" relation="include">
        </childnode>
        <childnode refid="151" relation="include">
        </childnode>
        <childnode refid="152" relation="include">
        </childnode>
        <childnode refid="153" relation="include">
        </childnode>
        <childnode refid="154" relation="include">
        </childnode>
        <childnode refid="155" relation="include">
        </childnode>
        <childnode refid="159" relation="include">
        </childnode>
      </node>
      <node id="146">
        <label>vector</label>
      </node>
      <node id="157">
        <label>resources/colormaps_matplotlib.h</label>
        <link refid="colormaps__matplotlib_8h"/>
        <childnode refid="158" relation="include">
        </childnode>
      </node>
      <node id="150">
        <label>QOpenGLFunctions</label>
      </node>
      <node id="149">
        <label>math.h</label>
      </node>
      <node id="159">
        <label>iostream</label>
      </node>
      <node id="154">
        <label>../external-libraries/glm-master/glm/vec3.hpp</label>
      </node>
      <node id="158">
        <label>unordered_map</label>
      </node>
      <node id="156">
        <label>algorithm</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="166">
        <label>mainwindow.cpp</label>
        <link refid="mainwindow_8cpp"/>
      </node>
      <node id="167">
        <label>spherewidget.cpp</label>
        <link refid="spherewidget_8cpp"/>
      </node>
      <node id="163">
        <label>spherewidget.h</label>
        <link refid="spherewidget_8h"/>
        <childnode refid="164" relation="include">
        </childnode>
        <childnode refid="167" relation="include">
        </childnode>
      </node>
      <node id="160">
        <label>icosphere.h</label>
        <link refid="icosphere_8h"/>
        <childnode refid="161" relation="include">
        </childnode>
        <childnode refid="162" relation="include">
        </childnode>
        <childnode refid="163" relation="include">
        </childnode>
      </node>
      <node id="168">
        <label>renderdata.cpp</label>
        <link refid="renderdata_8cpp"/>
      </node>
      <node id="165">
        <label>main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
      <node id="164">
        <label>mainwindow.h</label>
        <link refid="mainwindow_8h"/>
        <childnode refid="165" relation="include">
        </childnode>
        <childnode refid="166" relation="include">
        </childnode>
      </node>
      <node id="162">
        <label>renderdata.h</label>
        <link refid="renderdata_8h"/>
        <childnode refid="161" relation="include">
        </childnode>
        <childnode refid="163" relation="include">
        </childnode>
        <childnode refid="164" relation="include">
        </childnode>
        <childnode refid="168" relation="include">
        </childnode>
      </node>
      <node id="161">
        <label>icosphere.cpp</label>
        <link refid="icosphere_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_icosphere" prot="public">Icosphere</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>ICOSPHERE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ICOSPHERE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>STL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;list&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Qt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QOpenGLFunctions&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QVector3D&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>External<sp/>libraries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;../external-libraries/glm-master/glm/mat3x3.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;../external-libraries/glm-master/glm/matrix.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;../external-libraries/glm-master/glm/vec3.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="spheredepthdata_8h" kindref="compound">spheredepthdata.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Debugging<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="class_icosphere" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_icosphere" kindref="compound">Icosphere</ref><sp/>:<sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/>QOpenGLFunctions</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_icosphere_1a5fdbc49b812b3862df13c86f42b6eef5" kindref="member">Icosphere</ref>();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sphere_depth_data" kindref="compound">SphereDepthData</ref><sp/><ref refid="class_icosphere_1a504e5ebc64937cda33a2dd4a755c0ace" kindref="member">getIcosahedron</ref>();</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;SphereDepthData&gt;<sp/><ref refid="class_icosphere_1a0ab61f28cd6d528af88ce6174325a9c7" kindref="member">calculateDepthData</ref>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>maxCalculatedDepth,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>sphereDepth);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Obsolete</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>void<sp/>drawIcosphere(unsigned<sp/>int<sp/>numberOfSubdivisions,<sp/>std::list&lt;QVector3D<sp/>&gt;<sp/>pointsForHistogram);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_icosphere_1a228f0751b6ea858f322470b0045c6d8c" kindref="member">filterPointsForTriangle</ref>(std::list&lt;QVector3D&gt;<sp/>pointList,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v2,<sp/>std::list&lt;QVector3D&gt;<sp/>tmp_points,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v1,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v3);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;QVector3D&gt;<sp/>vertices;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;int&gt;<sp/>&gt;<sp/>indices;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>std::unordered_map&lt;std::string,<sp/>cm::ColorMapName&gt;<sp/>qActionStringToEnum;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>std::map&lt;size_t,<sp/>glm::vec3&gt;<sp/>colorLookupMap;<sp/><sp/><sp/><sp/><sp/>//<sp/>Maps<sp/>number<sp/>of<sp/>points<sp/>in<sp/>triangle<sp/>to<sp/>color<sp/>as<sp/>vec4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>totalPoints;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>std::vector&lt;float&gt;<sp/>colorMap;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>void<sp/>subdivide(float<sp/>*v1,<sp/>float<sp/>*v2,<sp/>float<sp/>*v3,<sp/>long<sp/>depth,<sp/>std::list&lt;QVector3D&gt;<sp/>&amp;allRemainingPoints);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>drawTriangle(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<sp/>v1,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<sp/>v2,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<sp/>v3){</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glBegin(GL_TRIANGLES);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glNormal3fv(v1);<sp/>glVertex3fv(v1);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glNormal3fv(v2);<sp/>glVertex3fv(v2);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glNormal3fv(v3);<sp/>glVertex3fv(v3);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glEnd();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>normalize(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v[3])<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLfloat<sp/>d<sp/>=<sp/>sqrt(v[0]*v[0]+v[1]*v[1]+v[2]*v[2]);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d<sp/>==<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;zero<sp/>length<sp/>vector&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v[0]<sp/>/=<sp/>d;<sp/>v[1]<sp/>/=<sp/>d;<sp/>v[2]<sp/>/=<sp/>d;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>triangleColor(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>pointsInTriangle);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>glm::mat3<sp/>getTransformationMatrix(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v1[3],<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v2[3],<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v3[3]);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pointInFirstQuadrantAfterTransformation(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>glm::vec3<sp/>&amp;point,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>glm::mat3<sp/>&amp;transformationMatrix);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sphere_depth_data" kindref="compound">SphereDepthData</ref><sp/>calculateSubdivision(<ref refid="class_sphere_depth_data" kindref="compound">SphereDepthData</ref><sp/>lastSphere);</highlight></codeline>
<codeline lineno="80"><highlight class="normal">};</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>ICOSPHERE_H</highlight></codeline>
    </programlisting>
    <location file="icosphere.h"/>
  </compounddef>
</doxygen>
